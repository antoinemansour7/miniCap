name: SonarCloud Analysis

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches:
      - main

jobs:
  sonarcloud:
    name: SonarCloud Scan
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Step 3: Move into the correct working directory
      - name: Move into FindMyClass directory
        working-directory: FindMyClass
        run: echo "Moved into FindMyClass directory"

      # Step 4: Generate secrets.js file using GitHub Secrets for googleAPIKey and openaiAPIKey
      - name: Generate secrets.js file
        working-directory: FindMyClass
        run: |
          echo "export const googleAPIKey = '${{ secrets.GOOGLE_API_KEY }}';" > app/secrets.js
          echo "export const openaiAPIKey = '${{ secrets.OPENAI_API_KEY }}';" >> app/secrets.js

      # Step 5: Install dependencies inside FindMyClass/
      - name: Install dependencies
        working-directory: FindMyClass
        run: npm install

      # Step 6: Run Jest tests with coverage
      - name: Run tests and collect coverage
        working-directory: FindMyClass
        run: npm test -- --coverage || true

      # Step 7: Install SonarScanner
      - name: Install SonarScanner
        run: npm install -g sonar-scanner

      # Step 8: Run SonarCloud Analysis inside FindMyClass/
      - name: Run SonarScanner
        working-directory: FindMyClass
        env:
          SONAR_PROJECT_KEY: antoinemansour7_miniCap
          SONAR_ORG: antoinemansour7
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            sonar-scanner \
              -Dsonar.projectKey=$SONAR_PROJECT_KEY \
              -Dsonar.organization=$SONAR_ORG \
              -Dsonar.sources=. \
              -Dsonar.host.url=https://sonarcloud.io/ \
              -Dsonar.token=$SONAR_TOKEN \
              -Dsonar.javascript.lcov.reportPaths=**/coverage/lcov.info \
              -Dsonar.coverage.exclusions=**/*.test.js,**/*.spec.js,**/jest.config.js,**/__tests__/**,**/babel.config.js,**/metro.config.js,**/jest.setup.js,**/_layout.jsx,**/hooks/**,**/App.jsx,constants/Colors.ts,components/CustomAlert.js,utils/shuttleUtils.js, **/Chatbot.js \
              -Dsonar.exclusions=**/node_modules/**,**/.git/**,**/.github/**,**/coverage/**,**/dist/**,**/build/**,**/__mocks__/**,**/__tests__/**,**scripts**,**/services/**,**/android/**,**/styles/** \
              -Dsonar.c.file.suffixes=- \
              -Dsonar.cpp.file.suffixes=- \
              -Dsonar.objc.file.suffixes=- \
              -Dsonar.pullrequest.key=${{ github.event.pull_request.number }} \
              -Dsonar.pullrequest.branch=${{ github.head_ref }} \
              -Dsonar.pullrequest.base=${{ github.base_ref }}
          else
            sonar-scanner \
              -Dsonar.projectKey=$SONAR_PROJECT_KEY \
              -Dsonar.organization=$SONAR_ORG \
              -Dsonar.sources=. \
              -Dsonar.host.url=https://sonarcloud.io/ \
              -Dsonar.token=$SONAR_TOKEN \
              -Dsonar.javascript.lcov.reportPaths=**/coverage/lcov.info \
              -Dsonar.coverage.exclusions=**/*.test.js,**/*.spec.js,**/jest.config.js,**/__tests__/**,**/babel.config.js,**/metro.config.js,**/jest.setup.js,**/_layout.jsx,**/hooks/**,**/App.jsx,constants/Colors.ts,components/CustomAlert.js,utils/shuttleUtils.js, **/Chatbot.js \
              -Dsonar.exclusions=**/node_modules/**,**/.git/**,**/.github/**,**/coverage/**,**/dist/**,**/build/**,**/__mocks__/**,**/__tests__/**,**scripts**,**/services/**,**/android/**,**/styles/** \
              -Dsonar.c.file.suffixes=- \
              -Dsonar.cpp.file.suffixes=- \
              -Dsonar.objc.file.suffixes=-
          fi