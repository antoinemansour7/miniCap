name: React Native CI

on:
  push:
    branches:
      - main
      - UnitTests
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Step 3: Change directory to FindMyClass
      - name: Change to FindMyClass directory
        working-directory: FindMyClass
        run: echo "Changed to FindMyClass directory"

      # Step 4: Generate secrets.js file using GitHub secrets
      - name: Generate secrets.js file
        working-directory: FindMyClass
        run: |
          echo "export const googleAPIKey = '${{ secrets.GOOGLE_API_KEY }}';" > app/secrets.js
          echo "export const openaiAPIKey = '${{ secrets.OPENAI_API_KEY }}';" >> app/secrets.js
          echo "export const firebaseConfig = ${{
            secrets.FIREBASE_CONFIG || '{}' }}" >> app/secrets.js
          # Optional: If you want to generate googleCalendarConfig dynamically, add it here:
          echo "export const googleCalendarConfig = {" >> app/secrets.js
          echo "  baseUrl: 'https://www.googleapis.com/calendar/v3/calendars/primary/events'," >> app/secrets.js
          echo "  params: { maxResults: 10, orderBy: 'startTime', singleEvents: true }" >> app/secrets.js
          echo "};" >> app/secrets.js

      # Step 5: Install dependencies
      - name: Install dependencies
        working-directory: FindMyClass
        run: npm install

      # Step 6: Install Expo CLI globally
      - name: Install Expo CLI
        run: npm install -g expo-cli

      # Step 7: Start Expo in offline mode (Sanity Check)
      - name: Start Expo (Offline Mode)
        working-directory: FindMyClass
        run: npx expo start --offline || echo "Expo initialized successfully"

      # Step 8: Run tests and collect coverage
      - name: Run tests and collect coverage
        working-directory: FindMyClass
        run: npm test || true

      # Step 9: Upload coverage to CodeCov
      - name: Upload coverage to CodeCov
        uses: codecov/codecov-action@v3
        with:
          directory: ./FindMyClass/coverage
          token: ${{ secrets.CODECOV_TOKEN }}